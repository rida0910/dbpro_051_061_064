@model FreelancerMarketplace.Models.Message

@{
    ViewBag.Title = "SendMessage";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<h2>SendMessage</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Message</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AttachmentId, "AttachmentId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("AttachmentId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AttachmentId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.JobId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.JobId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JobId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmployerId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmployerId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmployerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FreelancerId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FreelancerId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FreelancerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@



<br />
<br />
<br />

@using (Html.BeginForm("SendMessage", "Employer", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    <div>

        <!--Tabs -->
        <div>


            <div class="popup-tabs-container">

                <!-- Tab -->
                <div>

                    <!-- Welcome Text -->
                    <div class="welcome-text">
                        <h3>Direct Message To @ViewBag.Name</h3>
                    </div>
                    <center>
                        <div class="col-md-8">
                            <!-- Form -->
                            <form method="post" id="send-pm">
                                @Html.TextAreaFor(model => model.Text, 5, 5, new { placeholder = "Type your message here...", @class = "form-control input-text with-border" })
                                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })

                                <div class="uploadButton margin-top-30">
                                    <input class="uploadButton-input" type="file" accept="image/*, application/pdf" id="upload" name="AttachmentFile" />
                                    <label class="uploadButton-button ripple-effect" for="upload">Upload Files</label>
                                    <span class="uploadButton-file-name">Images or documents that might be helpful in describing your project</span>
                                </div>

                            </form>

                            <!-- Button -->
                            <input type="submit" value="Send" class="button full-width button-sliding-icon ripple-effect" />
                        </div>
                    </center>
                </div>

            </div>
        </div>
    </div>
}
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />